apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - watch
  - update
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-session-affinity: "true"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  sidecar-istio-proxy-image: cilium/istio_proxy
  tunnel: vxlan
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCekNDQWUrZ0F3SUJBZ0lQSkVnRkxCendaRGpYNnFFTjh3OUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1CNHgKSERBYUJnTlZCQU1URTJoMVltSnNaUzFqWVM1amFXeHBkVzB1YVc4d0hoY05Nakl3TWpFMU1UazFNalUyV2hjTgpNalV3TWpFME1UazFNalUyV2pBZU1Sd3dHZ1lEVlFRREV4Tm9kV0ppYkdVdFkyRXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvZmFJcmxiaHhOWnlXanFBRlEvMCtVeGUKY2pqN05ZRkR0ME44M1pCWnpYMW9rNGNCd3FWcXgzVVkyY2dtT05SVEh3dkRaQXFOVHY4Q3lnR2JXSmM5T3ErKwpzTUtwenB3UXhreGhxNHk2RitMRWw5cUttQnhhZWxscjV6SHo1b3lzcWJhcDA0cXBOZmVXd09MaFRORkhSZ2VRCmtMdXl6RmlPb0JxSlZkQXI2bERoMHJuZFhkdXFnSUpzSmRsNWpTK1VuS2VkRmxadVNTS2RtKzdDUXNHR2JybEcKdjhsSkQzbUhja2UxbGxvYWN0VDlVLzNjc1FDYXcrd0NhZGgrNzFuK0RYQ1JTRSt5UVpncVdzSjlldWdUVFQyYgpmakpVQWlpZHl6bUR0TURERjJ6N2o3UzBaSjBsb3JkZ1djMklobHhqRktlb2Rhd2RJVmNVbnJhdWVmVHkwUUlECkFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWVreklEcQo1TFd3cWtYOGplRGp5aExIa2hZbXBjWGpWOExnNjJkZTQrV3haRWw5WlRJOUpnSG5xSkFDSVNVbEJQNVcxamdlClhFT0FPN2t6QXNsWWRYTkFBcDgzbkozNnVjVE1kOHBCczl1RVlidDcrMXU1TzF5R3BnaEFSNkRMVjdZNWdUZEgKVTVtMjRpLzVzSWI0dWZFVzR6UnBFK1FrODJUT0svV0RDVGtnOXFXR2RZR1BTQmVHNkp0NWpPejRZYzJ5ZGJRWgpkRHN0S294NU03b2tZam5DdmdhZVhnczBibHRoaHNZYTNHL2N2Rm9SMEhBb0VYOFk1a3ZPeS90WmtUTGdSdjNhCjlwUW9zZzg4RVV1OVYrMW5uQ1E2ZVEvR2ppeXEzWTE1Uy8zWlFDNmtKbVRDbyt0RVNjQ2FYYzJqRmpORy9hbTUKUVRmT2NkeFppaVFjUXIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2ZhSXJsYmh4Tlp5V2pxQUZRLzArVXhlY2pqN05ZRkR0ME44M1pCWnpYMW9rNGNCCndxVnF4M1VZMmNnbU9OUlRId3ZEWkFxTlR2OEN5Z0diV0pjOU9xKytzTUtwenB3UXhreGhxNHk2RitMRWw5cUsKbUJ4YWVsbHI1ekh6NW95c3FiYXAwNHFwTmZlV3dPTGhUTkZIUmdlUWtMdXl6RmlPb0JxSlZkQXI2bERoMHJuZApYZHVxZ0lKc0pkbDVqUytVbktlZEZsWnVTU0tkbSs3Q1FzR0dicmxHdjhsSkQzbUhja2UxbGxvYWN0VDlVLzNjCnNRQ2F3K3dDYWRoKzcxbitEWENSU0UreVFaZ3FXc0o5ZXVnVFRUMmJmakpVQWlpZHl6bUR0TURERjJ6N2o3UzAKWkowbG9yZGdXYzJJaGx4akZLZW9kYXdkSVZjVW5yYXVlZlR5MFFJREFRQUJBb0lCQVFDTytTL05IdHNzUk5ZcgplbXJvck81blNCZ3pvc04zaHdXOCtMRjRjVjRrL1NqYzJwZ2VPS0liTXU1ZUNjWmI4bXJ5QkJOVzg4MnNSNGN4CnhkdFppQ0MvOXJaU0dYV0c4dFFJQ1JOTE9lNW8rWURzUURxS2JyVWNQbVgzY0d4TFFER0htNzB0QmNHNzV6VkkKVHIvdWJPd0xFTkI0UTRsaHhHY2JSSEdwdEJ1Z09xQ0JIVGNTaFdTQjlKWGxKaTVzRzQvTWhOQmpFREppN1N0Zgp6amc2TDlFQVdzWk15TU9zZ3dvUEF3cWE0ekY4OTQwd1RmalVXSXUzYzJjcllqTXpzWHZyVHNHNjNyRnhDby94Ci9NcGtYOEhJeVdPU1pnOEYxUnp3aVRMc29BL0V2VURYTVRLTld1aWZFNWZJTlZyb0hEMXFhcFdyVytZQnFWN0kKZEl4QWVhTkJBb0dCQU5JUHZPQVNUNWlKYXA1U1hYQ1NxNFZCVDgzc3ZHelVMS2FSWlUzenl6WVkrLzlIUGVtNgpNbXVrbXU5NVR1NEx0MFE1ZzA0YnB5WFV5S1pxMUlHN2o0V0MyL05YQTR0enBOL2RlL1M0dzJhSTF3UnpJcmErCmd2dWpoVWpsaUlWUUl6Mm90WHZlblBRN3hFNXEyZFdtam5rdEVDTnlmUUhna2U3V0k4YWJsVVFKQW9HQkFNVmkKQXRENzl6c0FUakZFSFNrTjN2Ulp3clJlbjdaREhYUFRsYVVrR3hOeERsSC8rdmszU204R09kOFRRc2JFdkY5SAo1RktxMlZFdUdkMXUyZ0xIUGc3bmJwSVJSNURlWW9OOFJ0SDE1dVJubzNhWWRybFhaazdoNWg2aHZDODV1ajY5CktJaW5TYjI3aFBEcU5TM3pDT2ZUa0hUMmt4d3FvQzNaM3FlQnZicUpBb0dBSi9uR3YvMjhHQk5PcndLTnRiYXoKM1pBb1Y5QU5xOGhWRnYza2dZazd5dmZHUFRhWm1ibE5qeDZzUFphZ1pyemtDNS9HVlQ3OStEMGVVazFTVTc0VgoraHFGTVRJR0Fxdm5YSk1SMitpdGh2M1RyWTBidGh0YllmZ2tqVkxoUUQyWDkwdjcvYTdIdjlMLzhNeDAyQ3Z5ClFTMUtQUFMweFg2dlJ2eUpvbXBKWmNFQ2dZQXpkK0FtSUYyU08vMG5xWXcxQlZIcXczRWEyVVdxSUF3UkJNNFQKbHJ1Y3NURTd2cFR4NFRIK2kxQVIxQkxvZzZwZTZmOG1jemhoaTdUZzRhUGxiNURHRUNEcjQ2ZVdwZlpvTk1LKwp3dkVuQThORERIU0ExY0p1dFVidEc5MVhMeVZhY0xhZUU0a04rVlNzQVZaR21nWHJkV1pJcVhjb3RCQzZoQUlrCkNaZXdpUUtCZ0RTcTV3VGI4V2FDTHkxMUg2YWZsbWE1OEJWaWY5N0RubFdWZHg0RDhQRUhpZHZlcnhxYXhHaTgKZ0pGTDNxODhCZGxHNXBuQmtGSzlqZ3RyQUdtZUVOTG9iTkJLcTQ0QmplY2xIR2tzSER6NHAyYVArU1I3VitKKwpObEhob2FWVFZ3SDc4cTd0VHZXbHZIODhiT2V6Tyt3Lzk5dFJEN21WMXhWTkNlWXNTeE9PCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCekNDQWUrZ0F3SUJBZ0lQSkVnRkxCendaRGpYNnFFTjh3OUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1CNHgKSERBYUJnTlZCQU1URTJoMVltSnNaUzFqWVM1amFXeHBkVzB1YVc4d0hoY05Nakl3TWpFMU1UazFNalUyV2hjTgpNalV3TWpFME1UazFNalUyV2pBZU1Sd3dHZ1lEVlFRREV4Tm9kV0ppYkdVdFkyRXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvZmFJcmxiaHhOWnlXanFBRlEvMCtVeGUKY2pqN05ZRkR0ME44M1pCWnpYMW9rNGNCd3FWcXgzVVkyY2dtT05SVEh3dkRaQXFOVHY4Q3lnR2JXSmM5T3ErKwpzTUtwenB3UXhreGhxNHk2RitMRWw5cUttQnhhZWxscjV6SHo1b3lzcWJhcDA0cXBOZmVXd09MaFRORkhSZ2VRCmtMdXl6RmlPb0JxSlZkQXI2bERoMHJuZFhkdXFnSUpzSmRsNWpTK1VuS2VkRmxadVNTS2RtKzdDUXNHR2JybEcKdjhsSkQzbUhja2UxbGxvYWN0VDlVLzNjc1FDYXcrd0NhZGgrNzFuK0RYQ1JTRSt5UVpncVdzSjlldWdUVFQyYgpmakpVQWlpZHl6bUR0TURERjJ6N2o3UzBaSjBsb3JkZ1djMklobHhqRktlb2Rhd2RJVmNVbnJhdWVmVHkwUUlECkFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWVreklEcQo1TFd3cWtYOGplRGp5aExIa2hZbXBjWGpWOExnNjJkZTQrV3haRWw5WlRJOUpnSG5xSkFDSVNVbEJQNVcxamdlClhFT0FPN2t6QXNsWWRYTkFBcDgzbkozNnVjVE1kOHBCczl1RVlidDcrMXU1TzF5R3BnaEFSNkRMVjdZNWdUZEgKVTVtMjRpLzVzSWI0dWZFVzR6UnBFK1FrODJUT0svV0RDVGtnOXFXR2RZR1BTQmVHNkp0NWpPejRZYzJ5ZGJRWgpkRHN0S294NU03b2tZam5DdmdhZVhnczBibHRoaHNZYTNHL2N2Rm9SMEhBb0VYOFk1a3ZPeS90WmtUTGdSdjNhCjlwUW9zZzg4RVV1OVYrMW5uQ1E2ZVEvR2ppeXEzWTE1Uy8zWlFDNmtKbVRDbyt0RVNjQ2FYYzJqRmpORy9hbTUKUVRmT2NkeFppaVFjUXIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQakNDQWlhZ0F3SUJBZ0lSQUtwdnpGbjNyQWN0M1JEb3Z4SW93UDh3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBeU1UVXhPVFV5TlRkYQpGdzB5TlRBeU1UUXhPVFV5TlRkYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEc2dlY3IKWm9zNU9iNzVmY0hiQXJxS3RqTjZGVjNUWi9QTStibkhWaGp3NWFHeGZrUVlxOHFmR3lsNk9rTFplZ2RtTkJDUgpyd2R5eitodnlSL0NHaHJYSkg3SHVuM054a1hMVlhad3U1SHZCNGhJN1lMcnNtWThsc056RXZMbXVPVEYzWnVlCnJabjVlbnplU0VGZVBtL3BBWUh2T1FVeVJ5VjdOUzJRUUpyN1hqVHNrTlQwTXlQT3lQSEN0RURTODdiLy9uMk4KVUJsMVh5QmxQUkIzWVhMbWJoSTBhTGZiY3Jxd01BeVZ4R2dyem96S2lzRTRtcGMwUlZNYXZoeVBySEdnRDhmTQpSL0RwM3lOeHJiWFRnYi9HaUFxbjl5aUZXMzQxRExLOWdFZFVVb2N1YVlVaitLb3ArT3Ayc3d4N2V6MjArTys1CmR6WDdldFZpSHMvUksvWHJBZ01CQUFHamF6QnBNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFxQmdOVkhSRUVJekFoZ2g4cQpMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCCkFRQWNKNmdVZXZ1Tm1FRFQyZkp6RzZHdXFMdncvb3Z4SEFjRjh0S1VFMWcwYURKbEpWemh6d1ZTNElZNU9JUG4KZ2YwSzNua0Q4ZnJHa29kM0dOcC9SN1JwTkdzSW1PU1djTXVOdXFIQjRlS3M5VnJPV3d0Sy9ORjdTMDg3RDNHMgoybVhoVDF3T3FqZUcxWXY5ZmhQeHA5cW5JNjE2dllHQVdYOTQ0TDdhWGNzVm5ER3F5L1lwTTlsNWRqL2lVOUthCjdvWUZSQUxKK2FRM3NjVDFYODhtK2xoaUdSdDZmMTBDeXZ3K1M3RkpBMnA0ZFd0dk8yVHJwZHNML2pjNGd6Q1QKTklyVUN6Nk4vLzBhempaeUxnK0JhQ2F2cVkrRlVsb2lEWXdGRWV4NHRDeDcybExSNDVBTFIrZUpzWktsb2UzMQprRkwxZjhIYXE3WnNIbVJleGdkN25hVGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBN0lIbksyYUxPVG0rK1gzQjJ3SzZpcll6ZWhWZDAyZnp6UG01eDFZWThPV2hzWDVFCkdLdktueHNwZWpwQzJYb0haalFRa2E4SGNzL29iOGtmd2hvYTF5Uit4N3A5emNaRnkxVjJjTHVSN3dlSVNPMkMKNjdKbVBKYkRjeEx5NXJqa3hkMmJucTJaK1hwODNraEJYajV2NlFHQjd6a0ZNa2NsZXpVdGtFQ2ErMTQwN0pEVQo5RE1qenNqeHdyUkEwdk8yLy81OWpWQVpkVjhnWlQwUWQyRnk1bTRTTkdpMzIzSzZzREFNbGNSb0s4Nk15b3JCCk9KcVhORVZUR3I0Y2o2eHhvQS9IekVmdzZkOGpjYTIxMDRHL3hvZ0twL2NvaFZ0K05ReXl2WUJIVkZLSExtbUYKSS9pcUtmanFkck1NZTNzOXRQanZ1WGMxKzNyVlloN1AwU3YxNndJREFRQUJBb0lCQUIvY25FVUhpb2dLRklWTwpBTmk5ZEY0Tmo3L0pzeHN3N1BKWFRrVGhmM2lzcHV6Zmd0TUVDY2NIaEwzM3JWdlpDYmdtR1hsVzZCejZqMmpICjRxUm1tZWtUL0pSeHRsTUxmQW1abU53MUdNTG44OTlIU0JUeXNyMUUzazNaWnFuWWpORnZPbkRWR0dJNHN5dksKOWl0NUkrQnpHSXNlMW1sZ2xsY1Q0ZkNHRTVyN1lyMTByNVJKaGp1YVgzamlZSlV1eUpES2lGbyszbjFsaTJOYgo5eVMrczVzSzNzZXhZYmFzbWc3eHNLN3VmRG5tQjZaVmpOd0xZazVGdlpBK3NWSzV3Z0RtdmdqU3hRaDdaZW5VCnpXdi9aYVJqMEMvenJWWitmSFVSUDYrR2dHMFViVktQRnVQS1dBMERxbHZTRU1VWlA3RmU3VU5lK1NwZ0VBbUEKcVY0cjZ4RUNnWUVBK2R4V2FCS0h3NzdtT2VWSTg5WTN2K3p3cUc2UUxhVU55SmdJVCtZclpxZXpLRHY1dHhscApHNnI0T2xQazhHb2dIS211UitPVHoxWjBxRU9xUS8vU2pVeCtNRWNZRk1SZ0NCbU13bWJFYkpUYWxreXEwR1lzCkFFZzdSRmRHNmhZem1mb1dHazM5RWhiRHpKNUxSZkdKczhhb0dzWnorNUZ0bHgveFJzeC9ER2tDZ1lFQThsR1MKUjcwL2pqQ2gvNWVMY1dzTkN4OWZ6RmRJd2dZUyt1Nm9EVnIzSGlTQktReEtiWk51MHAzRkdQVitpQ0M0Z3pKZQpYaGFYcVEzcXhKYWtkVlBpNnRUTzhxcE9neCtaRXo5MlAzVFZvaTcvTFBvVXFpeDRjaFF6eW1oNjlBQnNSa2RPClRSY1NFZTZmb253b3FoNWV4VFZkaXR1RS91OUhYZThkYXVXYzlUTUNnWUFQSU1nYWhRU3pWVnViSmNiRS9MTmoKYTNVbXZZcjlPSUVkSkJkY3Z4TGhwRVcwcWV6MHFSVTBGNlh2NGlSNmFmS0h5YjVEbkFQWENlVUdTeEtFQzNrMApGTzJPL3I3Mmd1MU5rRDUxaHNOZHo2VnNkRGZqWmt4RHVCdmVoMnBEd2hSZHZrYVlVU0NCZDk5akJES0tpWlZNCnpUcGdaS09oRjYwSytXUWlaVDlNQVFLQmdENVhxRGZXdzZ3MGJPbFNOdWoyTHNQbXpZSElEd3NEL3d3YUxKaEwKQi9yMFQxcWRNK1RmSW9zRFZqc21wZWdsNnZLdUdjTkJNc0dtdC9qZC9PL0dwa0hlZ0dQRVZ6QzdCMm9CVU0zZwpwRG4ydDJYOTdTVWZEZG5qd3JOWGtCS0lyVktqYzh5M204bUxSL3pJenJsOTJNb0tBY2dBMUVXMmovamwxUDYwCmxsNHJBb0dBTEttSWdkRjE3RFBqZjYwL2k4Tjd2TEw3NStzeDNOTFNja3V0MjliNW9VaStyQmFCbDR4a2xEek8KWFljNXlQbVcraXB0bXVaVTRnTlFvTFQzMFE3NkFGWXo1SDVhMm9Da0cxcklxYjZoeHVJUXJ3WjFqeXpFbHFxUQo2aHE2UmxhdXB5ZzB2dG1LTkxITHZxZ2VaSGxQbmV6MUt0TWorNTFTVm14R0xyOUZVU2s9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.11.1@sha256:977240a4783c7be821e215ead515da3093a10f4a7baea9f803511a2c2b44a235
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9876
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
